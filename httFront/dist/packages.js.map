{"version":3,"sources":["test_package.js","DummyStore.js","ParamPoly.js","packages.js"],"names":["TestPackage","text","console","warn","DummyStore","log","Store","prototype","findSlideDummy","Promise","res","rej","ParamPoly","urlvar","getUrlVars","vars","window","location","href","replace","m","key","value","findMark_raw","findMark","findMarkTypes_raw","findMarkTypes","getMarkByIds_raw","getMarkByIds","slide","name","specimen","study","footprint","source","x0","x1","y0","y1","image_data","dummy_mark","JSON","parse","decodeURIComponent","then","x","push","ids","includes","a"],"mappings":"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","file":"packages.js","sourceRoot":"../package","sourcesContent":["class TestPackage{\n  constructor(text){\n    console.warn(\"{sample package}\", text)\n  }\n}\n\nexport default TestPackage\n","function DummyStore(){\n  console.log(\"this has run\")\n  Store.prototype.findSlideDummy = function(){\n    return new Promise(function(res,rej){\n      res({'json': function(){\n        return [{ \"_id\" : { \"$oid\" : \"5bb6861db8bb11ffeaa05b6d\"} , \"name\" : \"CMU1\" , \"location\" : \"/images/sample.svs\" , \"mpp\" : 0.499}]\n      }})\n    })\n  }\n}\n\nexport default DummyStore\n","function ParamPoly(urlvar){\n\n  console.warn(\"{ParamPoly} Loaded\")\n  function getUrlVars() {\n    var vars = {};\n    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {\n        vars[key] = value;\n    });\n    return vars;\n  }\n  urlvar = urlvar || \"passed\"\n  // when document ready\n  // get url variable\n\n  //image_data.provenance.analysis.execution_id = \"url\"\n  Store.prototype.findMark_raw = Store.prototype.findMark\n  Store.prototype.findMarkTypes_raw = Store.prototype.findMarkTypes\n  Store.prototype.getMarkByIds_raw = Store.prototype.getMarkByIds\n  Store.prototype.findMark = function (slide, name, specimen, study, footprint, source, x0, x1, y0, y1){\n    if (!(urlvar in getUrlVars())){\n      return this.findMark_raw(slide, name, specimen, study, footprint, source, x0, x1, y0, y1)\n    } else {\n      // expecting feature collection so far\n      let image_data = JSON.parse(decodeURIComponent(getUrlVars()[urlvar]))\n      let dummy_mark = { \"_id\" : { \"$oid\" : \"000\"} , \"provenance\" : { \"image\" : { \"slide\" : \"NO\" , \"slidename\" : \"NO\"} , \"analysis\" : { \"source\" : \"url\" , \"execution_id\" : \"URLPARAM\"}} , \"geometries\" : { \"type\" : \"FeatureCollection\" , \"features\" : image_data}}\n      return this.findMark_raw(slide, name, specimen, study, footprint, source, x0, x1, y0, y1).then(x=>{\n        x.push(dummy_mark)\n        return x\n      })\n    }\n  }\n\n  Store.prototype.findMarkTypes = function(slide, name){\n    if (!(urlvar in getUrlVars())){\n      return this.findMarkTypes_raw(slide, name)\n    } else {\n      return this.findMarkTypes_raw(slide, name).then(x=>{\n        let urltype = { \"image\" : { \"slide\" : \"NO\" , \"slidename\" : \"NO\"} , \"analysis\" : { \"source\" : \"url\" , \"execution_id\" : \"URLPARAM\"}}\n        x.push(urltype)\n        return x\n      })\n    }\n  }\n\n  Store.prototype.getMarkByIds = function(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1){\n    console.log(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1)\n    if (ids.includes('URLPARAM')){\n      return this.getMarkByIds_raw(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1).then(x=>{\n        if (!(urlvar in getUrlVars())){\n          return x\n        } else {\n          // expecting feature collection so far\n          let image_data = JSON.parse(decodeURIComponent(getUrlVars()[urlvar]))\n          let dummy_mark = { \"_id\" : { \"$oid\" : \"000\"} , \"provenance\" : { \"image\" : { \"slide\" : \"NO\" , \"slidename\" : \"NO\"} , \"analysis\" : { \"source\" : \"url\" , \"execution_id\" : \"URLPARAM\"}} , \"geometries\" : { \"type\" : \"FeatureCollection\" , \"features\" : image_data}}\n          x.push(dummy_mark)\n          console.log(x)\n          return x\n        }\n      })\n    } else {\n      return this.getMarkByIds_raw(ids, slide, study, specimen, source, footprint, x0, x1, y0, y1)\n    }\n  }\n\n}\n\nexport default ParamPoly\n","import TestPackage from './test_package.js'\nimport DummyStore from './DummyStore.js'\nimport ParamPoly from './ParamPoly.js'\n\na = new TestPackage(\"Buildy\")\nDummyStore()\nParamPoly(\"passed\")\n"]}